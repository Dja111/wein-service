# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 14
      uses: actions/setup-java@v4
      with:
        java-version: '14'
        distribution: 'adopt'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        gradle-version: '6.9.4'

    #- name: Clean with Gradle
      #run: ./gradlew clean

    - name: Build with Gradle 6.9.4
      #run: gradle build
      run: ./gradlew build

  sonarqube:
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Set up JDK 14
        uses: actions/setup-java@v4
        with:
          java-version: '14'
          distribution: 'adopt'

        # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
        # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          gradle-version: '6.9.4'

          #- name: Clean with Gradle
          #run: ./gradlew clean

      - name: Build with Gradle 6.9.4
          #run: gradle build
        run: ./gradlew build

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        with:
          args: >
            -Dsonar.organization=dja111
            -Dsonar.projectKey=Dja111_wein-service
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.branch.name=main
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build-push:
    runs-on: ubuntu-latest
    needs: sonarqube
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v4
      with:
        java-version: '14'
        distribution: 'adopt'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        gradle-version: '6.9.4'

    #- name: Clean with Gradle
      #run: ./gradlew clean

    - name: Build with Gradle 6.9.4
      #run: gradle build
      run: ./gradlew build
      
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: dja111/wein-service
        tags: ${{ github.event.push.head.sha }}
        registry: docker.io
        dockerfile: deployment/docker/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: SHA speichern
      run: echo "SHA=${{ github.event.push.head.sha }}" >> $GITHUB_ENV
  update-image-tag-in-helm:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - run: |
          git config --global user.email aurel.donfak@gmail.com && git config --global user.name Dja111
          echo "cloning wein-service-env repo"
          git clone https://oauth2:${{ secrets.G_TOKEN }}@github.com/${{ github.repository_owner }}/wein-service-env.git
          cd wein-service-env
          echo "checkout source branch"
          git checkout ${{ github.event.push.head.ref }}
          echo "updating image tag in values file"
          echo " sha value: $SHA"
          sed -i "s,tag:.*,tag:\ $SHA," helm/weinservice/values.yaml
          git add . && git commit -m "update image tag [skip ci]"
          git push
        
